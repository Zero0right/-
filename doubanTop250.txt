--1、data
1、爬取目标网站（豆瓣）源代码
	伪装head中user-agent(浏览器类型)，从而通过urllib发送伪装的request给目标网站服务器，从而获取网页源代码
2、对源代码进行数据解析
	（1）利用beautifulsoup对源代码进行解析
	（2）根据想要获取的数据制定相对的正则表达式（re），将对应的数据找到，将一部电影的各个数据组成一个列表存储起来
3、保存数据
	（1）保存到.xls文件，利用xlwt库，代码类似于 创建一个excel文件，创建一个工作表sheet，相当于二维数组，通过循环遍历原始数据，存储到excel中
	（2）保存到数据库（sqlite3），连接数据库，获取指针，执行sql，commit，close，得到.db文件
--2、可视化
1、利用flask框架，通过路由转发，渲染模板实现页面的跳转，并实现向html文件传送数据，在html中{{接收数据}}，{%python在HTML中的表示（本项目中写for循环，但语法与python不同）%}
2、网上找到html（web）模板,在模板的基础上修改，建立几个网页
3、在python中连接数据库，去除数据库文件中的数据，传送给对应的html。movie.html即通过{{}} {%%}和<form>显示了.db文件中的数据
4、echarts--score.html
	同样需要现在python中将需要的数据从.db文件中提取出来，并传送给html
	echarts需要应用相应的.js文件，并分配图表显示区域，图片的具体样式可以从echarts官网获取，将要显示的数据嵌入
5、wordcloud--wordcloud.html
	根据获取数据进行分词、统计频率、显示
	jieba库用于分词
	numpy将图片转换为矩阵
	wordcloud就是将词根据出现频率按照不同的大小显示在指定的图形内
	PIL图片处理？
	matplotlib绘制图片
	得到最后的词云图片之后，显示在html中
	
	
